@page "/custom-error-handling"
@using ComponentAndHttpErrorsHandling.Components
@using ComponentAndHttpErrorsHandling.Utilities
@using System.Collections.Specialized
@inject ExceptionRecorderService ExceptionRecorderService

<h3>CustomErrorHandling</h3>
<h3>Custom error boundary with modified max error.</h3>
<BlazorSchoolErrorBoundary>
    <ChildContent>
        <TriggerError />
    </ChildContent>
    <ErrorContent>
        <TriggerError />
        <div>Throw more error and I will crash.</div>
    </ErrorContent>
</BlazorSchoolErrorBoundary>
<h3>Custom error boundary with default error content.</h3>
<BlazorSchoolErrorBoundary>
    <TriggerError />
</BlazorSchoolErrorBoundary>

@foreach (var exception in ExceptionRecorderService.Exceptions)
{
    <div>@exception.Message</div>
}

@code {
    protected override void OnInitialized()
    {
        ExceptionRecorderService.Exceptions.CollectionChanged += RefreshUI;
    }

    public void RefreshUI(object? sender, NotifyCollectionChangedEventArgs eventArgs)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ExceptionRecorderService.Exceptions.CollectionChanged -= RefreshUI;
    }
}